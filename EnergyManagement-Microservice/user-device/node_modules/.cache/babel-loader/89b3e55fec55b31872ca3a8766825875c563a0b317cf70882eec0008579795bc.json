{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crist\\\\Desktop\\\\DS\\\\DS2024_30444_Giurgiu_Anca_1\\\\user-device\\\\src\\\\components\\\\user-component\\\\ModalEditUser.js\",\n  _s = $RefreshSig$();\n// import '../../styles/ModalAdd.css';\n// import { updateUser } from '../../services/user_service';\n// import { useState } from 'react';\n\n// function ModalEditUser({closeModalEdit},usernameText,nameText,emailText,passwordText,roleText) {\n//     const [username, setUsername] = useState('');\n//     const [name, setName] = useState('');\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [role, setRole] = useState('client');\n\n//     async function handleUpdateUser() {\n//         try {\n//         //    if(verfica daca ai formatele bune){\n//             const result = await updateUser(username, name, email, password, role.toUpperCase());\n\n//             if (result.success) {\n//                 console.log(\"User edited successfully!\");\n//             } else {\n//                 alert(`Error: ${result.message}`);\n//             }                                           //e pt eroare din back?\n//         } catch (error) {\n//             console.error(\"Failed to edit user:\", error);\n//         }\n//     }\n\n//     return (\n//         <div className='modal'>\n//             <span id=\"close\" onClick={closeModalEdit}>&times;</span>\n//             <div className=\"modal-content\">\n//             <h2>Add user</h2>\n//                 <label>Username:</label>\n//                 <input value={username} onChange={(e) => setUsername(e.target.value)}>`${usernameText}`</input>\n//                 <label>Name:</label>\n//                 <input value={name} onChange={(e) => setName(e.target.value)}></input>\n//                 <label>Email:</label>\n//                 <input value={email} onChange={(e) => setEmail(e.target.value)}></input>\n//                 <label>Password:</label>\n//                 <input value={password} onChange={(e) => setPassword(e.target.value)} ></input> \n//                 {/* Proprietatea value={role} este necesară pentru a lega select box-ul de state-ul React și pentru a face controlul input-ului bidirecțional */}\n//                 <label>Role:</label>\n//                 <select value={role} onChange={(e) => setRole(e.target.value)}>\n//                     <option value=\"client\">Client</option>\n//                     <option value=\"admin\">Admin</option>\n//                 </select>\n//                 <button type='submit' onClick={handleUpdateUser}>Edit</button>\n//             </div>\n//         </div>\n\n//     );\n// }\n\n// export default ModalEditUser;\n\nimport '../../styles/ModalAdd.css';\nimport { updateUser } from '../../services/user_service';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModalEditUser({\n  closeModalEdit,\n  usernameText,\n  nameText,\n  emailText,\n  passwordText,\n  roleText\n}) {\n  _s();\n  const [username, setUsername] = useState('');\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [role, setRole] = useState('');\n  useEffect(() => {\n    setUsername(usernameText);\n    setName(nameText);\n    setEmail(emailText);\n    setPassword(passwordText);\n    setRole(roleText);\n  }, [usernameText, nameText, emailText, passwordText, roleText]);\n  async function handleUpdateUser() {\n    try {\n      const result = await updateUser(username, name, email, password, role.toUpperCase());\n      if (result.success) {\n        console.log(\"User edited successfully!\");\n        closeModalEdit(); // Close modal on success\n      } else {\n        alert(`Error: ${result.message}`);\n      }\n    } catch (error) {\n      console.error(\"Failed to edit user:\", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"close\",\n      onClick: closeModalEdit,\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Role:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: role,\n        onChange: e => setRole(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"client\",\n          children: \"Client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"admin\",\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleUpdateUser,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n_s(ModalEditUser, \"UpIb9IIsGa6J4asXkq1tJyt2B6w=\");\n_c = ModalEditUser;\nexport default ModalEditUser;\nvar _c;\n$RefreshReg$(_c, \"ModalEditUser\");","map":{"version":3,"names":["updateUser","useState","useEffect","jsxDEV","_jsxDEV","ModalEditUser","closeModalEdit","usernameText","nameText","emailText","passwordText","roleText","_s","username","setUsername","name","setName","email","setEmail","password","setPassword","role","setRole","handleUpdateUser","result","toUpperCase","success","console","log","alert","message","error","className","children","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","_c","$RefreshReg$"],"sources":["C:/Users/crist/Desktop/DS/DS2024_30444_Giurgiu_Anca_1/user-device/src/components/user-component/ModalEditUser.js"],"sourcesContent":["// import '../../styles/ModalAdd.css';\r\n// import { updateUser } from '../../services/user_service';\r\n// import { useState } from 'react';\r\n\r\n// function ModalEditUser({closeModalEdit},usernameText,nameText,emailText,passwordText,roleText) {\r\n//     const [username, setUsername] = useState('');\r\n//     const [name, setName] = useState('');\r\n//     const [email, setEmail] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [role, setRole] = useState('client');\r\n\r\n\r\n//     async function handleUpdateUser() {\r\n//         try {\r\n//         //    if(verfica daca ai formatele bune){\r\n//             const result = await updateUser(username, name, email, password, role.toUpperCase());\r\n    \r\n//             if (result.success) {\r\n//                 console.log(\"User edited successfully!\");\r\n//             } else {\r\n//                 alert(`Error: ${result.message}`);\r\n//             }                                           //e pt eroare din back?\r\n//         } catch (error) {\r\n//             console.error(\"Failed to edit user:\", error);\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <div className='modal'>\r\n//             <span id=\"close\" onClick={closeModalEdit}>&times;</span>\r\n//             <div className=\"modal-content\">\r\n//             <h2>Add user</h2>\r\n//                 <label>Username:</label>\r\n//                 <input value={username} onChange={(e) => setUsername(e.target.value)}>`${usernameText}`</input>\r\n//                 <label>Name:</label>\r\n//                 <input value={name} onChange={(e) => setName(e.target.value)}></input>\r\n//                 <label>Email:</label>\r\n//                 <input value={email} onChange={(e) => setEmail(e.target.value)}></input>\r\n//                 <label>Password:</label>\r\n//                 <input value={password} onChange={(e) => setPassword(e.target.value)} ></input> \r\n//                 {/* Proprietatea value={role} este necesară pentru a lega select box-ul de state-ul React și pentru a face controlul input-ului bidirecțional */}\r\n//                 <label>Role:</label>\r\n//                 <select value={role} onChange={(e) => setRole(e.target.value)}>\r\n//                     <option value=\"client\">Client</option>\r\n//                     <option value=\"admin\">Admin</option>\r\n//                 </select>\r\n//                 <button type='submit' onClick={handleUpdateUser}>Edit</button>\r\n//             </div>\r\n//         </div>\r\n\r\n//     );\r\n// }\r\n\r\n// export default ModalEditUser;\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport '../../styles/ModalAdd.css';\r\nimport { updateUser } from '../../services/user_service';\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction ModalEditUser({ closeModalEdit, usernameText, nameText, emailText, passwordText, roleText }) {\r\n    const [username, setUsername] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [role, setRole] = useState('');\r\n\r\n    useEffect(() => {\r\n        setUsername(usernameText);\r\n        setName(nameText);\r\n        setEmail(emailText);\r\n        setPassword(passwordText);\r\n        setRole(roleText);\r\n    }, [usernameText, nameText, emailText, passwordText, roleText]);\r\n\r\n    async function handleUpdateUser() {\r\n        try {\r\n            const result = await updateUser(username, name, email, password, role.toUpperCase());\r\n            if (result.success) {\r\n                console.log(\"User edited successfully!\");\r\n                closeModalEdit();  // Close modal on success\r\n            } else {\r\n                alert(`Error: ${result.message}`);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Failed to edit user:\", error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='modal'>\r\n            <span id=\"close\" onClick={closeModalEdit}>&times;</span>\r\n            <div className=\"modal-content\">\r\n                <h2>Edit User</h2>\r\n                <label>Username:</label>\r\n                <input value={username} onChange={(e) => setUsername(e.target.value)} />\r\n                <label>Name:</label>\r\n                <input value={name} onChange={(e) => setName(e.target.value)} />\r\n                <label>Email:</label>\r\n                <input value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                <label>Password:</label>\r\n                <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                <label>Role:</label>\r\n                <select value={role} onChange={(e) => setRole(e.target.value)}>\r\n                    <option value=\"client\">Client</option>\r\n                    <option value=\"admin\">Admin</option>\r\n                </select>\r\n                <button type='submit' onClick={handleUpdateUser}>Edit</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ModalEditUser;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}