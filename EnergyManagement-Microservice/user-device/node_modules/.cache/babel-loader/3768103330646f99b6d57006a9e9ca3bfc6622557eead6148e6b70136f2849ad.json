{"ast":null,"code":"import React, { useState } from 'react';\nfunction setCookie(value) {\n  document.cookie = `user=${value}`;\n}\nfunction getUser() {\n  try {\n    const userAux = document.cookie.split('; ').find(cookie => cookie.startsWith('user='));\n    if (userAux) {\n      const parsedUser = JSON.parse(decodeURIComponent(userAux.split('=')[1]));\n      return parsedUser;\n    } else {\n      return null;\n    }\n  } catch (error) {\n    console.error(\"Error parsing user from cookies:\", error);\n    return null;\n  }\n}\nexport { getUser, setCookie };","map":{"version":3,"names":["React","useState","setCookie","value","document","cookie","getUser","userAux","split","find","startsWith","parsedUser","JSON","parse","decodeURIComponent","error","console"],"sources":["C:/Users/crist/Desktop/DS/DS2024_30444_Giurgiu_Anca_1/user-device/src/services/login_service.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction setCookie(value){\r\n    document.cookie=`user=${value}`\r\n  }\r\n  \r\n  \r\n  function getUser() {\r\n    try {\r\n      const userAux = document.cookie.split('; ').find(cookie => cookie.startsWith('user='));\r\n      if (userAux) {\r\n        const parsedUser = JSON.parse(decodeURIComponent(userAux.split('=')[1]));\r\n        return parsedUser;\r\n      } else {\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error parsing user from cookies:\", error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n  export {\r\n   \r\n    getUser,\r\n    setCookie,\r\n  };"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,SAASA,CAACC,KAAK,EAAC;EACrBC,QAAQ,CAACC,MAAM,GAAC,QAAQF,KAAK,EAAE;AACjC;AAGA,SAASG,OAAOA,CAAA,EAAG;EACjB,IAAI;IACF,MAAMC,OAAO,GAAGH,QAAQ,CAACC,MAAM,CAACG,KAAK,CAAC,IAAI,CAAC,CAACC,IAAI,CAACJ,MAAM,IAAIA,MAAM,CAACK,UAAU,CAAC,OAAO,CAAC,CAAC;IACtF,IAAIH,OAAO,EAAE;MACX,MAAMI,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,kBAAkB,CAACP,OAAO,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACxE,OAAOG,UAAU;IACnB,CAAC,MAAM;MACL,OAAO,IAAI;IACb;EACF,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,OAAO,IAAI;EACb;AACF;AAGA,SAEET,OAAO,EACPJ,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}