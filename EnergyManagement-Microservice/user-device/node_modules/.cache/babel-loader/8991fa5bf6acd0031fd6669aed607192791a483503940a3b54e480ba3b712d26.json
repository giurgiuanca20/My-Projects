{"ast":null,"code":"const API_URL = \"http://localhost:8081/device\";\nasync function getDevices() {\n  const response = await fetch(API_URL + \"/findAll\", {\n    // mode: \"cors\",\n    // cache: \"no-cache\",\n    // credentials: \"include\",\n  });\n  const json = await response.json();\n  return json;\n}\nasync function postDevice(description, address, maxHourlyConsumption) {\n  const response = await fetch(API_URL + \"/create\", {\n    method: \"POST\",\n    //   mode: \"cors\",\n    //   cache: \"no-cache\",\n    //   credentials: \"include\",\n    body: JSON.stringify({\n      description: description,\n      address: address,\n      maxHourlyConsumption: maxHourlyConsumption\n    }),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  });\n  const data = await response.json();\n  return data;\n}\nasync function deleteDevice(description, address, maxHourlyConsumption) {\n  const response = await fetch(API_URL + \"/delete\", {\n    method: \"DELETE\",\n    //   mode: \"cors\",\n    //   cache: \"no-cache\",\n    //   credentials: \"include\",\n    body: JSON.stringify({\n      description: description,\n      address: address,\n      maxHourlyConsumption: maxHourlyConsumption\n    }),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\" //nu cred ca am nevoie de utf\n    }\n  });\n  const data = await response.json();\n  return data;\n}\nasync function updateUser(username, name, email, password, role) {\n  const response = await fetch(API_URL + \"/sign_up\", {\n    method: \"UPDATE\",\n    //   mode: \"cors\",\n    //   cache: \"no-cache\",\n    //   credentials: \"include\",\n    body: JSON.stringify({\n      username: username,\n      name: name,\n      email: email,\n      password: password,\n      role: role\n    }),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  });\n  const data = await response.json();\n  return data;\n}\nexport { postDevice, getDevices, deleteDevice };","map":{"version":3,"names":["API_URL","getDevices","response","fetch","json","postDevice","description","address","maxHourlyConsumption","method","body","JSON","stringify","headers","data","deleteDevice","updateUser","username","name","email","password","role"],"sources":["C:/Users/crist/Desktop/DS/DS2024_30444_Giurgiu_Anca_1/user-device/src/services/device_service.js"],"sourcesContent":["const API_URL = \"http://localhost:8081/device\";\r\n\r\nasync function getDevices() {\r\n  const response = await fetch(API_URL+\"/findAll\",{\r\n    // mode: \"cors\",\r\n    // cache: \"no-cache\",\r\n    // credentials: \"include\",\r\n  });\r\n  const json = await response.json();\r\n  return json;\r\n}\r\n\r\nasync function postDevice(description, address, maxHourlyConsumption) {\r\n    const response = await fetch(API_URL + \"/create\", {\r\n      method: \"POST\",\r\n    //   mode: \"cors\",\r\n    //   cache: \"no-cache\",\r\n    //   credentials: \"include\",\r\n      body: JSON.stringify({\r\n        description: description,\r\n        address: address,\r\n        maxHourlyConsumption: maxHourlyConsumption,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    });\r\n  \r\n    const data = await response.json();\r\n    return data;\r\n  }\r\n\r\n\r\n  async function deleteDevice(description,address,maxHourlyConsumption) {\r\n    const response = await fetch(API_URL + \"/delete\", {\r\n      method: \"DELETE\",\r\n    //   mode: \"cors\",\r\n    //   cache: \"no-cache\",\r\n    //   credentials: \"include\",\r\n      body: JSON.stringify({\r\n        description: description,\r\n        address:address,\r\n        maxHourlyConsumption:maxHourlyConsumption,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",   //nu cred ca am nevoie de utf\r\n      },\r\n    });\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  }\r\n  \r\n  async function updateUser(username, name, email, password, role) {\r\n    const response = await fetch(API_URL + \"/sign_up\", {\r\n      method: \"UPDATE\",\r\n    //   mode: \"cors\",\r\n    //   cache: \"no-cache\",\r\n    //   credentials: \"include\",\r\n      body: JSON.stringify({\r\n        username: username,\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n        role:role,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    });\r\n      \r\n    const data = await response.json();\r\n    return data;\r\n  }\r\n\r\n\r\n\r\n\r\n  export {\r\n   \r\n    postDevice,\r\n    getDevices,\r\n    deleteDevice,\r\n\r\n  };"],"mappings":"AAAA,MAAMA,OAAO,GAAG,8BAA8B;AAE9C,eAAeC,UAAUA,CAAA,EAAG;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,GAAC,UAAU,EAAC;IAC9C;IACA;IACA;EAAA,CACD,CAAC;EACF,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;EAClC,OAAOA,IAAI;AACb;AAEA,eAAeC,UAAUA,CAACC,WAAW,EAAEC,OAAO,EAAEC,oBAAoB,EAAE;EAClE,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,GAAG,SAAS,EAAE;IAChDS,MAAM,EAAE,MAAM;IAChB;IACA;IACA;IACEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBN,WAAW,EAAEA,WAAW;MACxBC,OAAO,EAAEA,OAAO;MAChBC,oBAAoB,EAAEA;IACxB,CAAC,CAAC;IACFK,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACE,IAAI,CAAC,CAAC;EAClC,OAAOU,IAAI;AACb;AAGA,eAAeC,YAAYA,CAACT,WAAW,EAACC,OAAO,EAACC,oBAAoB,EAAE;EACpE,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,GAAG,SAAS,EAAE;IAChDS,MAAM,EAAE,QAAQ;IAClB;IACA;IACA;IACEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBN,WAAW,EAAEA,WAAW;MACxBC,OAAO,EAACA,OAAO;MACfC,oBAAoB,EAACA;IACvB,CAAC,CAAC;IACFK,OAAO,EAAE;MACP,cAAc,EAAE,iCAAiC,CAAI;IACvD;EACF,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACE,IAAI,CAAC,CAAC;EAClC,OAAOU,IAAI;AACb;AAEA,eAAeE,UAAUA,CAACC,QAAQ,EAAEC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,EAAE;EAC/D,MAAMnB,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,GAAG,UAAU,EAAE;IACjDS,MAAM,EAAE,QAAQ;IAClB;IACA;IACA;IACEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBK,QAAQ,EAAEA,QAAQ;MAClBC,IAAI,EAAEA,IAAI;MACVC,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA,QAAQ;MAClBC,IAAI,EAACA;IACP,CAAC,CAAC;IACFR,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACE,IAAI,CAAC,CAAC;EAClC,OAAOU,IAAI;AACb;AAKA,SAEET,UAAU,EACVJ,UAAU,EACVc,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}