{"ast":null,"code":"const API_URL = \"http://localhost:8080/user\";\nconst AUTH_URL = \"http://localhost:8080/auth\";\nasync function getUsers() {\n  const response = await fetch(API_URL + \"/findAll\", {\n    method: \"GET\"\n    // mode: \"cors\",\n    // cache: \"no-cache\",\n    // credentials: \"include\",\n  });\n  const json = await response.json();\n  return json;\n}\nasync function getUserId() {\n  const response = await fetch(API_URL + \"/getserId\", {\n    method: \"GET\",\n    // mode: \"cors\",\n    // cache: \"no-cache\",\n    // credentials: \"include\",\n    body: JSON.stringify({\n      username: username,\n      name: name,\n      email: email,\n      password: password,\n      role: role\n    })\n  });\n  const json = await response.json();\n  return json;\n}\nasync function deleteUser(username) {\n  const response = await fetch(API_URL + \"/delete?username=\" + encodeURIComponent(username), {\n    method: \"DELETE\",\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\" //nu cred ca am nevoie de utf\n    }\n  });\n  const text = await response.text();\n  return text;\n}\nasync function updateUser(username, name, email, password, role) {\n  const response = await fetch(API_URL + \"/update\", {\n    method: \"PUT\",\n    // mode: \"cors\",\n    // cache: \"no-cache\",\n    // credentials: \"include\",\n    body: JSON.stringify({\n      username: username,\n      name: name,\n      email: email,\n      password: password,\n      role: role\n    }),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  });\n  const text = await response.text();\n  return text;\n}\nasync function postUser(username, name, email, password, role) {\n  const response = await fetch(AUTH_URL + \"/sign_up\", {\n    method: \"POST\",\n    //   mode: \"cors\",\n    //   cache: \"no-cache\",\n    //   credentials: \"include\",\n    body: JSON.stringify({\n      username: username,\n      name: name,\n      email: email,\n      password: password,\n      role: role\n    }),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  });\n  const text = await response.text();\n  return text;\n}\nexport { postUser, deleteUser, getUsers, updateUser };","map":{"version":3,"names":["API_URL","AUTH_URL","getUsers","response","fetch","method","json","getUserId","body","JSON","stringify","username","name","email","password","role","deleteUser","encodeURIComponent","headers","text","updateUser","postUser"],"sources":["C:/Users/crist/Desktop/DS/DS2024_30444_Giurgiu_Anca_1/user-device/src/services/user_service.js"],"sourcesContent":["const API_URL = \"http://localhost:8080/user\";\r\nconst AUTH_URL = \"http://localhost:8080/auth\";\r\n\r\nasync function getUsers() {\r\n  const response = await fetch(API_URL+\"/findAll\",{\r\n    method: \"GET\",\r\n    // mode: \"cors\",\r\n    // cache: \"no-cache\",\r\n    // credentials: \"include\",\r\n  });\r\n  const json = await response.json();\r\n  return json;\r\n}\r\n\r\nasync function getUserId() {\r\n  const response = await fetch(API_URL+\"/getserId\",{\r\n    method: \"GET\",\r\n    // mode: \"cors\",\r\n    // cache: \"no-cache\",\r\n    // credentials: \"include\",\r\n    body: JSON.stringify({\r\n      username: username,\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n      role:role,\r\n    }),\r\n  });\r\n  const json = await response.json();\r\n  return json;\r\n}\r\n\r\n\r\nasync function deleteUser(username) {\r\n  const response = await fetch(API_URL + \"/delete?username=\" + encodeURIComponent(username), {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",   //nu cred ca am nevoie de utf\r\n      },\r\n    });\r\n\r\n    const text = await response.text();\r\n    return text;\r\n  }\r\n  \r\n  async function updateUser(username, name, email, password, role) {\r\n    const response = await fetch(API_URL + \"/update\", {\r\n      method: \"PUT\",\r\n      // mode: \"cors\",\r\n      // cache: \"no-cache\",\r\n      // credentials: \"include\",\r\n      body: JSON.stringify({\r\n        username: username,\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n        role:role,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    });\r\n      \r\n    const text = await response.text();\r\n    return text;\r\n  }\r\n  \r\n\r\n\r\nasync function postUser(username, name,email,password,role) {\r\n    const response = await fetch(AUTH_URL + \"/sign_up\", {\r\n      method: \"POST\",\r\n    //   mode: \"cors\",\r\n    //   cache: \"no-cache\",\r\n    //   credentials: \"include\",\r\n      body: JSON.stringify({\r\n        username: username,\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n        role:role,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    });\r\n  \r\n    const text = await response.text();\r\n    return text;\r\n  }\r\n  export {\r\n   \r\n    postUser,\r\n    deleteUser,\r\n    getUsers,\r\n    updateUser,\r\n\r\n  };"],"mappings":"AAAA,MAAMA,OAAO,GAAG,4BAA4B;AAC5C,MAAMC,QAAQ,GAAG,4BAA4B;AAE7C,eAAeC,QAAQA,CAAA,EAAG;EACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,OAAO,GAAC,UAAU,EAAC;IAC9CK,MAAM,EAAE;IACR;IACA;IACA;EACF,CAAC,CAAC;EACF,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOA,IAAI;AACb;AAEA,eAAeC,SAASA,CAAA,EAAG;EACzB,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAACJ,OAAO,GAAC,WAAW,EAAC;IAC/CK,MAAM,EAAE,KAAK;IACb;IACA;IACA;IACAG,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,QAAQ,EAAEA,QAAQ;MAClBC,IAAI,EAAEA,IAAI;MACVC,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA,QAAQ;MAClBC,IAAI,EAACA;IACP,CAAC;EACH,CAAC,CAAC;EACF,MAAMT,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOA,IAAI;AACb;AAGA,eAAeU,UAAUA,CAACL,QAAQ,EAAE;EAClC,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAACJ,OAAO,GAAG,mBAAmB,GAAGiB,kBAAkB,CAACN,QAAQ,CAAC,EAAE;IACvFN,MAAM,EAAE,QAAQ;IAChBa,OAAO,EAAE;MACP,cAAc,EAAE,iCAAiC,CAAI;IACvD;EACF,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAG,MAAMhB,QAAQ,CAACgB,IAAI,CAAC,CAAC;EAClC,OAAOA,IAAI;AACb;AAEA,eAAeC,UAAUA,CAACT,QAAQ,EAAEC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,EAAE;EAC/D,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAACJ,OAAO,GAAG,SAAS,EAAE;IAChDK,MAAM,EAAE,KAAK;IACb;IACA;IACA;IACAG,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,QAAQ,EAAEA,QAAQ;MAClBC,IAAI,EAAEA,IAAI;MACVC,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA,QAAQ;MAClBC,IAAI,EAACA;IACP,CAAC,CAAC;IACFG,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAG,MAAMhB,QAAQ,CAACgB,IAAI,CAAC,CAAC;EAClC,OAAOA,IAAI;AACb;AAIF,eAAeE,QAAQA,CAACV,QAAQ,EAAEC,IAAI,EAACC,KAAK,EAACC,QAAQ,EAACC,IAAI,EAAE;EACxD,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAQ,GAAG,UAAU,EAAE;IAClDI,MAAM,EAAE,MAAM;IAChB;IACA;IACA;IACEG,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,QAAQ,EAAEA,QAAQ;MAClBC,IAAI,EAAEA,IAAI;MACVC,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA,QAAQ;MAClBC,IAAI,EAACA;IACP,CAAC,CAAC;IACFG,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAG,MAAMhB,QAAQ,CAACgB,IAAI,CAAC,CAAC;EAClC,OAAOA,IAAI;AACb;AACA,SAEEE,QAAQ,EACRL,UAAU,EACVd,QAAQ,EACRkB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}