{"ast":null,"code":"const API_URL = \"http://localhost:8080/user\";\nconst AUTH_URL = \"http://localhost:8080/auth\";\nasync function getUserByUsername(username) {\n  const response = await fetch(`${API_URL}?username=${username}`, {\n    mode: \"cors\",\n    cache: \"no-cache\",\n    credentials: \"include\"\n  });\n  const json = await response.json();\n  return json;\n}\nasync function deleteComment(commentId) {\n  return fetch(API_URL + \"/comments/\" + commentId, {\n    method: \"DELETE\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    credentials: \"include\"\n  });\n}\nasync function updateReportedComment(commentId) {\n  return fetch(API_URL + \"/comments/report/patch/\" + commentId, {\n    method: \"PATCH\"\n  });\n}\nasync function postUser(username, name, email, password, role) {\n  const response = await fetch(API_URL + \"/create\", {\n    method: \"POST\",\n    //   mode: \"cors\",\n    //   cache: \"no-cache\",\n    //   credentials: \"include\",\n    body: JSON.stringify({\n      username: username,\n      name: name,\n      email: email,\n      password: password,\n      role: role\n    }),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  });\n  const data = await response.json();\n  return data;\n}\nexport { postUser };","map":{"version":3,"names":["API_URL","AUTH_URL","getUserByUsername","username","response","fetch","mode","cache","credentials","json","deleteComment","commentId","method","updateReportedComment","postUser","name","email","password","role","body","JSON","stringify","headers","data"],"sources":["C:/Users/crist/Desktop/DS/DS2024_30444_Giurgiu_Anca_1/user-device/src/services/user_service.js"],"sourcesContent":["const API_URL = \"http://localhost:8080/user\";\r\nconst AUTH_URL = \"http://localhost:8080/auth\";\r\n\r\nasync function getUserByUsername(username) {\r\n  const response = await fetch(`${API_URL}?username=${username}`,{\r\n    mode: \"cors\",\r\n    cache: \"no-cache\",\r\n    credentials: \"include\",\r\n  });\r\n  const json = await response.json();\r\n  return json;\r\n}\r\n\r\nasync function deleteComment(commentId) {\r\n    return fetch(API_URL + \"/comments/\" + commentId, {\r\n      method: \"DELETE\",\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"include\",\r\n    });\r\n  }\r\n  \r\n  async function updateReportedComment(commentId) {\r\n    return fetch(API_URL + \"/comments/report/patch/\" + commentId, {\r\n      method: \"PATCH\",\r\n    });\r\n  }\r\n  \r\n\r\n\r\nasync function postUser(username, name,email,password,role) {\r\n    const response = await fetch(API_URL + \"/create\", {\r\n      method: \"POST\",\r\n    //   mode: \"cors\",\r\n    //   cache: \"no-cache\",\r\n    //   credentials: \"include\",\r\n      body: JSON.stringify({\r\n        username: username,\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n        role:role,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    });\r\n  \r\n    const data = await response.json();\r\n    return data;\r\n  }\r\n  export {\r\n   \r\n    postUser,\r\n\r\n  };"],"mappings":"AAAA,MAAMA,OAAO,GAAG,4BAA4B;AAC5C,MAAMC,QAAQ,GAAG,4BAA4B;AAE7C,eAAeC,iBAAiBA,CAACC,QAAQ,EAAE;EACzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,aAAaG,QAAQ,EAAE,EAAC;IAC7DG,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE,UAAU;IACjBC,WAAW,EAAE;EACf,CAAC,CAAC;EACF,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAI,CAAC,CAAC;EAClC,OAAOA,IAAI;AACb;AAEA,eAAeC,aAAaA,CAACC,SAAS,EAAE;EACpC,OAAON,KAAK,CAACL,OAAO,GAAG,YAAY,GAAGW,SAAS,EAAE;IAC/CC,MAAM,EAAE,QAAQ;IAChBN,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE,UAAU;IACjBC,WAAW,EAAE;EACf,CAAC,CAAC;AACJ;AAEA,eAAeK,qBAAqBA,CAACF,SAAS,EAAE;EAC9C,OAAON,KAAK,CAACL,OAAO,GAAG,yBAAyB,GAAGW,SAAS,EAAE;IAC5DC,MAAM,EAAE;EACV,CAAC,CAAC;AACJ;AAIF,eAAeE,QAAQA,CAACX,QAAQ,EAAEY,IAAI,EAACC,KAAK,EAACC,QAAQ,EAACC,IAAI,EAAE;EACxD,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAACL,OAAO,GAAG,SAAS,EAAE;IAChDY,MAAM,EAAE,MAAM;IAChB;IACA;IACA;IACEO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBlB,QAAQ,EAAEA,QAAQ;MAClBY,IAAI,EAAEA,IAAI;MACVC,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA,QAAQ;MAClBC,IAAI,EAACA;IACP,CAAC,CAAC;IACFI,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAG,MAAMnB,QAAQ,CAACK,IAAI,CAAC,CAAC;EAClC,OAAOc,IAAI;AACb;AACA,SAEET,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}