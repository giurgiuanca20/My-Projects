{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crist\\\\Desktop\\\\DS\\\\DS2024_30444_Giurgiu_Anca_1\\\\user-device\\\\src\\\\components\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport '../styles/Admin.css';\nimport Device from './device-component/Device';\nimport User from './user-component/User';\nimport React, { useState, useEffect } from 'react';\nimport ModalAddUser from './user-component/ModalAddUser';\nimport ModalAddDevice from './device-component/ModalAddDevice';\nimport { getUsers } from './../services/user_service';\nimport { getDevices, deleteDevice } from './../services/device_service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Admin() {\n  _s();\n  const name = 'John';\n  const [selectedDevices, setSelectedDevices] = useState([]); //Aceasta este o listă care stochează ID-urile dispozitivelor selectate. Dacă un dispozitiv este selectat, ID-ul său este adăugat în această listă. Dacă utilizatorul face click din nou pe dispozitiv, ID-ul său va fi eliminat din listă (deci dispozitivul va fi deselectat).\n  //selectedDevices: pentru a ține evidența dispozitivelor care sunt selectate atunci când utilizatorul face click pe ele.\n  const handleSelectDevice = id => {\n    //Aceasta funcție este folosită pentru a adăuga sau elimina dispozitivele din lista selectedDevices.\n    if (selectedDevices.includes(id)) {\n      // Dacă ID-ul dispozitivului există deja în selectedDevices, înseamnă că dispozitivul este deja selectat, deci îl eliminăm din listă (deselectăm dispozitivul).\n      setSelectedDevices(selectedDevices.filter(deviceId => deviceId !== id));\n    } else {\n      // Dacă ID-ul dispozitivului nu există în listă, adăugăm ID-ul în selectedDevices, marcându-l ca fiind selectat.\n\n      setSelectedDevices([...selectedDevices, id]); //... ca sa pot selecta mai multe containere\n    }\n  };\n  const deleteDev = async () => {\n    // Iterăm prin lista dispozitivelor selectate și le ștergem folosind `deleteDevice`\n    for (const deviceId of selectedDevices) {\n      const device = devices.find(d => d.id === deviceId);\n      if (device) {\n        try {\n          // Apelează funcția `deleteDevice` pentru a șterge dispozitivul din backend\n          await deleteDevice(device.description, device.address, device.maxHourlyConsumption);\n          console.log(`Deleted device: ${device.description}`);\n        } catch (error) {\n          console.error(`Failed to delete device: ${device.description}`, error);\n        }\n      }\n    }\n\n    // Filtrează lista de dispozitive locale pentru a elimina cele șterse\n    const remainingDevices = devices.filter(device => !selectedDevices.includes(device.id));\n    setDevices(remainingDevices);\n    setSelectedDevices([]); // Resetează selecțiile după ștergere\n  };\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    const loadUsers = async () => {\n      try {\n        const fetchedUsers = await getUsers();\n        setUsers(fetchedUsers);\n      } catch (error) {\n        console.error(\"Failed to fetch users:\", error);\n      }\n    };\n    loadUsers();\n  }, []);\n  const [devices, setDevices] = useState([]);\n  useEffect(() => {\n    const loadDevices = async () => {\n      try {\n        const fetchedDevices = await getDevices();\n        setDevices(fetchedDevices);\n      } catch (error) {\n        console.error(\"Failed to fetch devices:\", error);\n      }\n    };\n    loadDevices();\n  }, []);\n  const renderDevices = () => {\n    return devices.map((device, index) => /*#__PURE__*/_jsxDEV(Device, {\n      descriptionText: `${device.description}`,\n      addressText: `${device.address}`,\n      energyText: `${device.energy}`,\n      onSelect: handleSelectDevice,\n      isSelected: selectedDevices.includes(device.id) //Verifică dacă ID-ul dispozitivului se află în selectedDevices. Dacă da, atunci dispozitivul este considerat selectat și i se aplică clasa selected.\n      ,\n      id: device.id\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this));\n  };\n  const renderUsers = () => {\n    return users.map((user, index) => /*#__PURE__*/_jsxDEV(User, {\n      usernameText: `${user.username}`,\n      nameText: `${user.name}`,\n      emailText: `${user.email}`,\n      passwordText: `${user.password}`,\n      roleText: `${user.role}`\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this));\n  };\n  const [isModalOpen, setModalOpen] = useState(false);\n  const openModal = () => {\n    setModalOpen(true);\n  };\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n  const render = () => {\n    if (selectedOption === 'users') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [renderUsers(), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonsClass\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: openModal,\n            children: \"Add User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), isModalOpen && /*#__PURE__*/_jsxDEV(ModalAddUser, {\n            closeModal: closeModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => alert('Edit User'),\n            children: \"Edit User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => alert('Delete User'),\n            children: \"Delete User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this);\n    } else if (selectedOption === 'devices') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [renderDevices(), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonsClass\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: openModal,\n            children: \"Add Device\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), isModalOpen && /*#__PURE__*/_jsxDEV(ModalAddDevice, {\n            closeModal: closeModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => alert('Edit Device'),\n            children: \"Edit Device\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: deleteDev,\n            children: \"Delete Device\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this);\n    } else if (selectedOption === 'mapping') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => alert('Add Device'),\n          children: \"Add Device\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => alert('Edit Device'),\n          children: \"Edit Device\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => alert('Delete Device'),\n          children: \"Delete Device\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this);\n    }\n    return null;\n  };\n  const [selectedOption, setSelectedOption] = useState('users');\n  const handleSwitchChange = e => {\n    setSelectedOption(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hi, \", name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n      href: \"https://cdn.jsdelivr.net/css-toggle-switch/latest/toggle-switch.css\",\n      rel: \"stylesheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"switch\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"switch-y\",\n        name: \"tripple\",\n        type: \"radio\",\n        value: \"users\",\n        className: \"switch-input\",\n        checked: selectedOption === \"users\",\n        onChange: handleSwitchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"switch-y\",\n        className: \"switch-label switch-label-y\",\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"switch-i\",\n        name: \"tripple\",\n        type: \"radio\",\n        value: \"devices\",\n        className: \"switch-input\",\n        checked: selectedOption === \"devices\",\n        onChange: handleSwitchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"switch-i\",\n        className: \"switch-label switch-label-i\",\n        children: \"Devices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"switch-n\",\n        name: \"tripple\",\n        type: \"radio\",\n        value: \"mapping\",\n        className: \"switch-input\",\n        checked: selectedOption === \"mapping\",\n        onChange: handleSwitchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"switch-n\",\n        className: \"switch-label switch-label-n\",\n        children: \"Mapping\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"switch-selector\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), render()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 9\n  }, this);\n}\n_s(Admin, \"P/PjyOd3s/8GeNXJSZkqxvYEu9E=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["Device","User","React","useState","useEffect","ModalAddUser","ModalAddDevice","getUsers","getDevices","deleteDevice","jsxDEV","_jsxDEV","Admin","_s","name","selectedDevices","setSelectedDevices","handleSelectDevice","id","includes","filter","deviceId","deleteDev","device","devices","find","d","description","address","maxHourlyConsumption","console","log","error","remainingDevices","setDevices","users","setUsers","loadUsers","fetchedUsers","loadDevices","fetchedDevices","renderDevices","map","index","descriptionText","addressText","energyText","energy","onSelect","isSelected","fileName","_jsxFileName","lineNumber","columnNumber","renderUsers","user","usernameText","username","nameText","emailText","email","passwordText","password","roleText","role","isModalOpen","setModalOpen","openModal","closeModal","render","selectedOption","children","className","onClick","alert","setSelectedOption","handleSwitchChange","e","target","value","href","rel","type","checked","onChange","for","_c","$RefreshReg$"],"sources":["C:/Users/crist/Desktop/DS/DS2024_30444_Giurgiu_Anca_1/user-device/src/components/Admin.js"],"sourcesContent":["import '../styles/Admin.css';\r\nimport Device from './device-component/Device';\r\nimport User from './user-component/User';\r\nimport React, { useState, useEffect } from 'react';\r\nimport ModalAddUser from './user-component/ModalAddUser';\r\nimport ModalAddDevice from './device-component/ModalAddDevice';\r\nimport { getUsers } from './../services/user_service';\r\nimport { getDevices, deleteDevice } from './../services/device_service';\r\nfunction Admin() {\r\n\r\n    const name = 'John';\r\n\r\n    const [selectedDevices, setSelectedDevices] = useState([]); //Aceasta este o listă care stochează ID-urile dispozitivelor selectate. Dacă un dispozitiv este selectat, ID-ul său este adăugat în această listă. Dacă utilizatorul face click din nou pe dispozitiv, ID-ul său va fi eliminat din listă (deci dispozitivul va fi deselectat).\r\n//selectedDevices: pentru a ține evidența dispozitivelor care sunt selectate atunci când utilizatorul face click pe ele.\r\n    const handleSelectDevice = (id) => { //Aceasta funcție este folosită pentru a adăuga sau elimina dispozitivele din lista selectedDevices.\r\n       if (selectedDevices.includes(id)) { // Dacă ID-ul dispozitivului există deja în selectedDevices, înseamnă că dispozitivul este deja selectat, deci îl eliminăm din listă (deselectăm dispozitivul).\r\n            setSelectedDevices(selectedDevices.filter(deviceId => deviceId !== id));\r\n        } else {  // Dacă ID-ul dispozitivului nu există în listă, adăugăm ID-ul în selectedDevices, marcându-l ca fiind selectat.\r\n       \r\n            setSelectedDevices([...selectedDevices, id]);//... ca sa pot selecta mai multe containere\r\n        }\r\n    };\r\n\r\n    \r\n    const deleteDev = async () => {\r\n        // Iterăm prin lista dispozitivelor selectate și le ștergem folosind `deleteDevice`\r\n        for (const deviceId of selectedDevices) {\r\n            const device = devices.find(d => d.id === deviceId);\r\n            if (device) {\r\n                try {\r\n                    // Apelează funcția `deleteDevice` pentru a șterge dispozitivul din backend\r\n                    await deleteDevice(device.description, device.address, device.maxHourlyConsumption);\r\n                    console.log(`Deleted device: ${device.description}`);\r\n                } catch (error) {\r\n                    console.error(`Failed to delete device: ${device.description}`, error);\r\n                }\r\n            }\r\n        }\r\n    \r\n        // Filtrează lista de dispozitive locale pentru a elimina cele șterse\r\n        const remainingDevices = devices.filter(device => !selectedDevices.includes(device.id));\r\n        setDevices(remainingDevices);\r\n        setSelectedDevices([]); // Resetează selecțiile după ștergere\r\n    };\r\n    \r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    const [users, setUsers] = useState([]);\r\n    useEffect(() => {\r\n        const loadUsers = async () => {\r\n            try {\r\n                const fetchedUsers = await getUsers();\r\n                setUsers(fetchedUsers);\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch users:\", error);\r\n            }\r\n        };\r\n\r\n        loadUsers();\r\n    }, []);\r\n\r\n\r\n\r\n    const [devices, setDevices] = useState([]);\r\n    useEffect(() => {\r\n        const loadDevices = async () => {\r\n            try {\r\n                const fetchedDevices = await getDevices();\r\n                setDevices(fetchedDevices);\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch devices:\", error);\r\n            }\r\n        };\r\n\r\n        loadDevices();\r\n    }, []);\r\n\r\n\r\n    const renderDevices = () => {\r\n        return devices.map((device, index) => (\r\n            <Device\r\n                key={index}\r\n                descriptionText={`${device.description}`}\r\n                addressText={`${device.address}`}\r\n                energyText={`${device.energy}`}\r\n                onSelect={handleSelectDevice}\r\n                isSelected={selectedDevices.includes(device.id)} //Verifică dacă ID-ul dispozitivului se află în selectedDevices. Dacă da, atunci dispozitivul este considerat selectat și i se aplică clasa selected.\r\n                id={device.id}\r\n            />\r\n        ));\r\n    }\r\n    const renderUsers = () => {\r\n        return users.map((user, index) => (\r\n            <User\r\n                key={index}\r\n                usernameText={`${user.username}`}\r\n                nameText={`${user.name}`}\r\n                emailText={`${user.email}`}\r\n                passwordText={`${user.password}`}\r\n                roleText={`${user.role}`}\r\n            />\r\n        ));\r\n    }\r\n\r\n    \r\n    const [isModalOpen, setModalOpen] = useState(false);\r\n    const openModal = () => {\r\n        setModalOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setModalOpen(false);\r\n    };\r\n\r\n\r\n\r\n    const render = () => {\r\n        if (selectedOption === 'users') {\r\n            return (\r\n                <div>\r\n                    {renderUsers()}\r\n                    <div className='buttonsClass'>\r\n                        <button onClick={openModal}>Add User</button>\r\n                        {isModalOpen && (\r\n                            <ModalAddUser closeModal={closeModal} />\r\n                        )}\r\n                        <button onClick={() => alert('Edit User')}>Edit User</button>\r\n                        <button onClick={() => alert('Delete User')}>Delete User</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n\r\n\r\n        } else if (selectedOption === 'devices') {\r\n            return (\r\n                <div>\r\n                    {renderDevices()}\r\n                    <div className='buttonsClass'>\r\n                        <button onClick={openModal}>Add Device</button>\r\n                        {isModalOpen && (\r\n                            <ModalAddDevice closeModal={closeModal} />\r\n                        )}\r\n                        <button onClick={() => alert('Edit Device')}>Edit Device</button>\r\n                        <button onClick={deleteDev}>Delete Device</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else if (selectedOption === 'mapping') {\r\n            return (\r\n                <div>\r\n                    <button onClick={() => alert('Add Device')}>Add Device</button>\r\n                    <button onClick={() => alert('Edit Device')}>Edit Device</button>\r\n                    <button onClick={() => alert('Delete Device')}>Delete Device</button>\r\n                </div>\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const [selectedOption, setSelectedOption] = useState('users');\r\n    const handleSwitchChange = (e) => {\r\n        setSelectedOption(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className='admin-container'>\r\n            <h1>Hi, {name}!</h1>\r\n            <link href=\"https://cdn.jsdelivr.net/css-toggle-switch/latest/toggle-switch.css\" rel=\"stylesheet\" />\r\n\r\n\r\n            <div className=\"switch\">\r\n                <input id=\"switch-y\" name=\"tripple\" type=\"radio\" value=\"users\" className=\"switch-input\" checked={selectedOption === \"users\"} onChange={handleSwitchChange} />\r\n                <label for=\"switch-y\" className=\"switch-label switch-label-y\">Users</label>\r\n                <input id=\"switch-i\" name=\"tripple\" type=\"radio\" value=\"devices\" className=\"switch-input\" checked={selectedOption === \"devices\"} onChange={handleSwitchChange} />\r\n                <label for=\"switch-i\" className=\"switch-label switch-label-i\">Devices</label>\r\n                <input id=\"switch-n\" name=\"tripple\" type=\"radio\" value=\"mapping\" className=\"switch-input\" checked={selectedOption === \"mapping\"} onChange={handleSwitchChange} />\r\n                <label for=\"switch-n\" className=\"switch-label switch-label-n\">Mapping</label>\r\n                <span className=\"switch-selector\"></span>\r\n            </div>\r\n            {render()}\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Admin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}