{"ast":null,"code":"const API_URL = \"http://localhost:8080/user\";\nconst AUTH_URL = \"http://localhost:8080/auth\";\nasync function getUsers() {\n  const response = await fetch(API_URL + \"/findAll\", {\n    // mode: \"cors\",\n    // cache: \"no-cache\",\n    // credentials: \"include\",\n  });\n  const json = await response.json();\n  return json;\n}\nasync function deleteUser(username) {\n  const response = await fetch(API_URL + \"/delete\", {\n    method: \"DELETE\",\n    //   mode: \"cors\",\n    //   cache: \"no-cache\",\n    //   credentials: \"include\",\n    body: JSON.stringify({\n      username\n    }),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\" //nu cred ca am nevoie de utf\n    }\n  });\n  const data = await response.json();\n  return data;\n}\nasync function updateReportedComment(commentId) {\n  return fetch(API_URL + \"/comments/report/patch/\" + commentId, {\n    method: \"PATCH\"\n  });\n}\nasync function postUser(username, name, email, password, role) {\n  const response = await fetch(AUTH_URL + \"/sign_up\", {\n    method: \"POST\",\n    //   mode: \"cors\",\n    //   cache: \"no-cache\",\n    //   credentials: \"include\",\n    body: JSON.stringify({\n      username: username,\n      name: name,\n      email: email,\n      password: password,\n      role: role\n    }),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  });\n  const data = await response.json();\n  return data;\n}\nexport { postUser, deleteUser, getUsers };","map":{"version":3,"names":["API_URL","AUTH_URL","getUsers","response","fetch","json","deleteUser","username","method","body","JSON","stringify","headers","data","updateReportedComment","commentId","postUser","name","email","password","role"],"sources":["C:/Users/crist/Desktop/DS/DS2024_30444_Giurgiu_Anca_1/user-device/src/services/user_service.js"],"sourcesContent":["const API_URL = \"http://localhost:8080/user\";\r\nconst AUTH_URL = \"http://localhost:8080/auth\";\r\n\r\nasync function getUsers() {\r\n  const response = await fetch(API_URL+\"/findAll\",{\r\n    // mode: \"cors\",\r\n    // cache: \"no-cache\",\r\n    // credentials: \"include\",\r\n  });\r\n  const json = await response.json();\r\n  return json;\r\n}\r\n\r\nasync function deleteUser(username) {\r\n    const response = await fetch(API_URL + \"/delete\", {\r\n      method: \"DELETE\",\r\n    //   mode: \"cors\",\r\n    //   cache: \"no-cache\",\r\n    //   credentials: \"include\",\r\n      body: JSON.stringify({\r\n        username\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",   //nu cred ca am nevoie de utf\r\n      },\r\n    });\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  }\r\n  \r\n  async function updateReportedComment(commentId) {\r\n    return fetch(API_URL + \"/comments/report/patch/\" + commentId, {\r\n      method: \"PATCH\",\r\n    });\r\n  }\r\n  \r\n\r\n\r\nasync function postUser(username, name,email,password,role) {\r\n    const response = await fetch(AUTH_URL + \"/sign_up\", {\r\n      method: \"POST\",\r\n    //   mode: \"cors\",\r\n    //   cache: \"no-cache\",\r\n    //   credentials: \"include\",\r\n      body: JSON.stringify({\r\n        username: username,\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n        role:role,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    });\r\n  \r\n    const data = await response.json();\r\n    return data;\r\n  }\r\n  export {\r\n   \r\n    postUser,\r\n    deleteUser,\r\n    getUsers,\r\n\r\n  };"],"mappings":"AAAA,MAAMA,OAAO,GAAG,4BAA4B;AAC5C,MAAMC,QAAQ,GAAG,4BAA4B;AAE7C,eAAeC,QAAQA,CAAA,EAAG;EACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,OAAO,GAAC,UAAU,EAAC;IAC9C;IACA;IACA;EAAA,CACD,CAAC;EACF,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;EAClC,OAAOA,IAAI;AACb;AAEA,eAAeC,UAAUA,CAACC,QAAQ,EAAE;EAChC,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAACJ,OAAO,GAAG,SAAS,EAAE;IAChDQ,MAAM,EAAE,QAAQ;IAClB;IACA;IACA;IACEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBJ;IACF,CAAC,CAAC;IACFK,OAAO,EAAE;MACP,cAAc,EAAE,iCAAiC,CAAI;IACvD;EACF,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACE,IAAI,CAAC,CAAC;EAClC,OAAOQ,IAAI;AACb;AAEA,eAAeC,qBAAqBA,CAACC,SAAS,EAAE;EAC9C,OAAOX,KAAK,CAACJ,OAAO,GAAG,yBAAyB,GAAGe,SAAS,EAAE;IAC5DP,MAAM,EAAE;EACV,CAAC,CAAC;AACJ;AAIF,eAAeQ,QAAQA,CAACT,QAAQ,EAAEU,IAAI,EAACC,KAAK,EAACC,QAAQ,EAACC,IAAI,EAAE;EACxD,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAQ,GAAG,UAAU,EAAE;IAClDO,MAAM,EAAE,MAAM;IAChB;IACA;IACA;IACEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBJ,QAAQ,EAAEA,QAAQ;MAClBU,IAAI,EAAEA,IAAI;MACVC,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA,QAAQ;MAClBC,IAAI,EAACA;IACP,CAAC,CAAC;IACFR,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACE,IAAI,CAAC,CAAC;EAClC,OAAOQ,IAAI;AACb;AACA,SAEEG,QAAQ,EACRV,UAAU,EACVJ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}